@page "/profile"

@using System.ComponentModel.DataAnnotations

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
<DataAnnotationsValidator/>
<MudGrid>
    <MudItem md="12">
        <MudCard>
            <MudCardHeader>
                <MudText Typo="Typo.h4">Edit Profile</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem md="1">

                    </MudItem>
                    <MudItem md="8">
                        <MudTextField Label="First name" HelperText="Max. 8 characters"
                                      @bind-Value="model.Username" For="@(() => model.Username)"/>
                        <MudTextField Label="Email" Class="mt-3"
                                      @bind-Value="model.Email" For="@(() => model.Email)"/>
                    </MudItem>
                    <MudItem md="3">

                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudGrid>
                    <MudItem md="1"></MudItem>
                    <MudItem md="11">
                        <MudButton ButtonType="ButtonType.Submit" StartIcon="@Icons.Filled.Save" Variant="Variant.Filled" Color="Color.Secondary">Save</MudButton>
                        <MudButton ButtonType="ButtonType.Reset" StartIcon="@Icons.Filled.Refresh" Variant="Variant.Filled" Color="Color.Default" Class="ml-md-3">Reset</MudButton>
                    </MudItem>
                </MudGrid>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>
</EditForm>
@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}